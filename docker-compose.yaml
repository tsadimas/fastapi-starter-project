version: '3'
services:
  fastapi:
    build:
      context: .
      dockerfile: fastapi.Dockerfile
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    volumes:
      - ./app:/usr/data/app
    # environment:
    #   - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/foo
    env_file:
      - app/.env
    healthcheck:
      test:
        - CMD
        - wget -S --spider http://localhost:8000/docs
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
    restart: always

  db:
    image: postgres:14
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=foo
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - 'pgdata:/var/lib/postgresql/data/'
      - './assets/postgres/init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql'

  keycloak:
    image: 'quay.io/keycloak/keycloak:21.0'
    environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: db
        DB_DATABASE: keycloak
        DB_SCHEMA: public
        KC_DB_USERNAME: postgres
        # DB_SCHEMA: public
        KC_DB_PASSWORD: postgres
        KEYCLOAK_USER: keycloakuser
        KEYCLOAK_PASSWORD: keycloakpassword
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: admin
        PROXY_ADDRESS_FORWARDING: 'true'
        KEYCLOAK_LOGLEVEL: DEBUG
    entrypoint:
      [
        "/opt/keycloak/bin/kc.sh",
        "start",
        "--optimized",
        "--http-enabled=true",
        "--hostname-strict-https=false",
        "--hostname-strict=false",
        "--proxy=edge"
      ]
    ports:
      - '8080:8080'
    depends_on:
      db:
        condition: service_healthy
    restart: always
    healthcheck:
      test: 'curl --fail http://localhost:9990 || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
 
volumes:
  pgdata:


